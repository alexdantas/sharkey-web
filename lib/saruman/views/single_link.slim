/
  Layout for a single Link
  It will get shown as a part of a greater
  list
  Local variable: link

li.link.list-group-item.hoverable-parent.ajax-delete-parent
  .row
    span.link-title
      - if link.title.empty?
        a href="#{link.url}" = link.url
      - else
        a href="#{link.url}" = link.title
    span.link-title-short-url

      / This magical Regular Expression does right this:
        http://coisa.com            => coisa.com
        http://coisa.com.br         => coisa.com
        ftp://coisa.com.br          => coisa.com
        ftp://coisa.com.br/         => coisa.com
        ftp://coisa.com.br/whatever => coisa.com
        https://coisa.com/?0129321  => coisa.com
      | #{link.url[/:\/\/(.+\..+)([.\/]|$)/, 1]}

  .row
    .link-category
      - if link.category
        a.link-category href="/category/#{link.category.id}" title="#{link.category.name}"
          span.label.label-default = link.category.name
  .row
    .link-tags
      - if link.tags
        - link.tags.each do |tag|
          a.link-tag href="/tag/#{tag.id}" title="#{tag.name}"
            span.badge = tag.name
  .row
    span.link-internal-link
      a.btn.btn-xs.btn-primary href="/link/#{link.id}" title="Internal Link"
        span.label.label-primary
          span.glyphicon.glyphicon-link

    span.link-checkbox
      | possibly checkbox

    /span.asdasdcol-md-4.hoverable-children
    span.link-controls
      button.btn.btn-xs.btn-primary title="Edit Link"
        span.glyphicon.glyphicon-pencil

      form action="/link/#{link.id}" method="POST"
        .form-group
          /
            Most browsers don't recognize the DELETE
            HTTP method, so this is a fake for Sinatra
            to recognize it as DELETE anyway
          input type="hidden" name="_method" value="DELETE"
          button.ajax-delete.btn.btn-xs.btn-primary type="submit" title="Delete Link"
            span.glyphicon.glyphicon-trash


  .row
    span.link-description

    span.link-added
      ruby:
        #
        # Full date where the link was added
        added_full = link.added_at.strftime '%H:%m %d-%m-%Y'
        #
        # Now we'll calculate a short, human-friendly
        # version of the above (like '2 days, 5 hours')
        added_secs = link.added_at.strftime('%s').to_i
        now_secs   = DateTime.now.strftime('%s').to_i
        #
        added_short = ChronicDuration.output(now_secs-added_secs)
      | Added
      a<> href="#" title="#{added_full}"
        time = added_short
      | ago

  .row
    span.link-visited
      | Visited x times

